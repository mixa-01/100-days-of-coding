
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* curr = head;
        int r = 0;
        while (curr != nullptr) {
            r++;
            curr = curr->next;
        }
        ListNode* temp = head;
        int stop = r - n;
        if (stop == 0) {
            return head->next;
        }
        for (int i = 0; i < r - 1; i++) {

            if ((i + 1) == stop) {
                temp->next = temp->next->next;
            }
            temp = temp->next;
        }

        return head;
    }
};
