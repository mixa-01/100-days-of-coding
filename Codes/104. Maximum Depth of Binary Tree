//BruteForce
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == nullptr) return 0;
        int l = maxDepth(root->left);
        int r = maxDepth(root->right);
        return 1+max(l,r);
    }
};
//BFS
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        queue<TreeNode*> q;
        q.push(root);

        int ans = 0;
        while(!q.empty()){
            int size= q.size();
            for(int i =0; i<size;i++){
                TreeNode* node= q.front();
                    q.pop();
                    if(node->left) q.push(node->left);
                    if(node->right) q.push(node->right);
            }
            ans++;
        }
        return ans;
    }
};
